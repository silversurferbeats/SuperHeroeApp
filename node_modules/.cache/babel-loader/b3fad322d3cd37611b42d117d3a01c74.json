{"ast":null,"code":"import app from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth'; // tem que autorizar no site firebase \n\nimport 'firebase/storage'; // para upload de imagem, liberar acesso no construtor\n\nlet firebaseConfig = {\n  apiKey: \"AIzaSyAJ-y7xaZun4gr4Frsyh6UaQ8vSBZ7_Fd0\",\n  authDomain: \"react-app-filmaria.firebaseapp.com\",\n  projectId: \"react-app-filmaria\",\n  storageBucket: \"react-app-filmaria.appspot.com\",\n  messagingSenderId: \"1015207299188\",\n  appId: \"1:1015207299188:web:990040db6bc65c61bde921\",\n  measurementId: \"G-D6DZPF27TJ\"\n}; // Initialize Firebase\n\nclass firebase {\n  constructor() {\n    //corrigir erro no firebase\n    if (!app.apps.length) {\n      app.initializeApp(firebaseConfig);\n    } else {\n      app.app(); // if already initialized, use that one\n    } //referenciando o database para acessar em outros locais\n\n\n    this.app = app.database(); // necess치rio liberar acesso de outros locais ao storage para upload de imagem\n\n    this.storage = app.storage();\n  }\n\n  login(email, password) {\n    return app.auth().signInWithEmailAndPassword(email, password);\n  }\n\n  logout() {\n    return app.auth().signOut();\n  }\n  /* Olheiro \n  firebase.database().ref('usuarios').child(1).on('value', (snapshot)=>{\n    let state = this.state;\n    state.nome = snapshot.val().nome;\n    state.idade = snapshot.val().idade;\n    this.setState(state);\n  */\n  //verifica se tem algum usu치rio logado e retorna o email\n\n\n  getCurrent() {\n    return app.auth().currentUser && app.auth().currentUser.email;\n  }\n\n  getCurrentId() {\n    return app.auth().currentUser.uid;\n  }\n\n  async register(nome, lastName, cel, email, password) {\n    await app.auth().createUserWithEmailAndPassword(email, password);\n    const uid = app.auth().currentUser.uid;\n    return app.database().ref('usuarios').child(uid).set({\n      nome: nome,\n      lastName: lastName,\n      celular: cel\n    });\n  }\n\n  async addFavorite(idHeroi) {\n    const heroi = idHeroi;\n    const uid = app.auth().currentUser.uid;\n    return app.database().ref('usuarios').child(uid).child('Favoritos').child(heroi).set(idHeroi);\n  }\n\n  async deleteFavorite(idHeroi) {\n    const heroi = idHeroi;\n    const uid = app.auth().currentUser.uid;\n    return app.database().ref('usuarios').child(uid).child('Favoritos').child(heroi).remove();\n  }\n\n  isInitialized() {\n    return new Promise(resolve => {\n      app.auth().onAuthStateChanged(resolve);\n    });\n  }\n\n  async getUserName(callback) {\n    if (!app.auth().currentUser) {\n      return null;\n    }\n\n    const uid = app.auth().currentUser.uid;\n    await app.database().ref('usuarios').child(uid).once('value').then(callback);\n  }\n\n}\n\nexport default new firebase();","map":{"version":3,"sources":["/home/gabriel/Escritorio/Super-hero-App/src/firebase.js"],"names":["app","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","constructor","apps","length","initializeApp","database","storage","login","email","password","auth","signInWithEmailAndPassword","logout","signOut","getCurrent","currentUser","getCurrentId","uid","register","nome","lastName","cel","createUserWithEmailAndPassword","ref","child","set","celular","addFavorite","idHeroi","heroi","deleteFavorite","remove","isInitialized","Promise","resolve","onAuthStateChanged","getUserName","callback","once","then"],"mappings":"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","sourcesContent":["import app from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth'; // tem que autorizar no site firebase \nimport 'firebase/storage'; // para upload de imagem, liberar acesso no construtor\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyAJ-y7xaZun4gr4Frsyh6UaQ8vSBZ7_Fd0\",\n    authDomain: \"react-app-filmaria.firebaseapp.com\",\n    projectId: \"react-app-filmaria\",\n    storageBucket: \"react-app-filmaria.appspot.com\",\n    messagingSenderId: \"1015207299188\",\n    appId: \"1:1015207299188:web:990040db6bc65c61bde921\",\n    measurementId: \"G-D6DZPF27TJ\"\n  }\n// Initialize Firebase\n\n\nclass firebase {\n    constructor(){\n        //corrigir erro no firebase\n        if (!app.apps.length) {\n            app.initializeApp(firebaseConfig);\n         }else {\n            app.app(); // if already initialized, use that one\n         }\n\n         //referenciando o database para acessar em outros locais\n         this.app=app.database();\n\n        // necess치rio liberar acesso de outros locais ao storage para upload de imagem\n         this.storage = app.storage();\n    }\n\n    login(email,password){\n        return app.auth().signInWithEmailAndPassword(email, password)\n        \n    }\n\n    logout(){\n        \n        return app.auth().signOut();\n    }\n\n    /* Olheiro \n    firebase.database().ref('usuarios').child(1).on('value', (snapshot)=>{\n      let state = this.state;\n      state.nome = snapshot.val().nome;\n      state.idade = snapshot.val().idade;\n      this.setState(state);\n    */\n\n    //verifica se tem algum usu치rio logado e retorna o email\n    getCurrent(){\n        return app.auth().currentUser && app.auth().currentUser.email\n    }\n\n    getCurrentId(){\n        return app.auth().currentUser.uid\n    }\n\n\n    async register(nome,lastName,cel,email,password){\n      await  app.auth().createUserWithEmailAndPassword(email, password)\n\n      const uid = app.auth().currentUser.uid;\n\n      return app.database().ref('usuarios').child(uid).set({\n          nome:nome,\n          lastName:lastName,\n          celular:cel\n      })\n        \n    }\n\n    async addFavorite(idHeroi){\n       \n        const heroi=idHeroi;\n        const uid = app.auth().currentUser.uid;\n  \n        return app.database().ref('usuarios').child(uid).child('Favoritos').child(heroi).set(idHeroi)\n          \n      }\n\n      async deleteFavorite(idHeroi){\n       \n        const heroi=idHeroi;\n        const uid = app.auth().currentUser.uid;\n  \n        return app.database().ref('usuarios').child(uid).child('Favoritos').child(heroi).remove()\n          \n      }\n\n    isInitialized(){\n        return new Promise(resolve =>{\n            app.auth().onAuthStateChanged(resolve);\n        })\n    }\n\n    async getUserName(callback){\n        if(!app.auth().currentUser){\n            return null;\n        }\n\n        const uid = app.auth().currentUser.uid;\n\n        await app.database().ref('usuarios').child(uid).once('value').then(callback)\n\n    }\n\n    \n\n   \n\n}\n\nexport default new firebase();\n"]},"metadata":{},"sourceType":"module"}